/*
 (9강)
 
 변수
 - 데이터를 담는 상자를 선언하는 것, 그리고 값을 저장
 - 메모리 공간에 이름을 매기고 이름을 매긴 상자에 값을 넣겠다
 - 데이터를 담을 수 있는 공간(바구니)
 - 식별자 라고 부르고 한 영역에 유일한 이름으로 사용된다
 - 프로그램 동작의 첫 단계: 변수 선언
 
 상수
 - 값이 변경 불가능한(immutable)
 - 변하지 않는 데이터 상자를 선언하는 것
 - 상수라는 공간을 선언해서 오른쪽 값을 담는다
 - 값은 한번 담기면 변할 수 없다
 
 string interpolation(스트링 인터플레이션): 문자열 보간법
 - \(변수)
 - 변수를 출력하기 위한 약속
 
 swift 변수(식별자) 특징
 - lowerCamelCase(변수(속성), 함수(메서드))
 - UpperCamelCase(클래스, 구조체, 열거형과같은 커스텀타입) Any, Self
 
 키워드
 - 약속어
 - 스위프트에서 특별한 의미로 사용하겠다고 미리 정해놓은 단어
 
 주석
 - 컴퓨터에게 코드를 읽을 필요 없다고 알려주는 부분
 
 데이터 타입
 - 타입은 대문자로 시작한다
 - 왜 필요?: 1바이트 공간에 어떤 형태로(정수, 소수, 문자열) 저장방식 파악해야 함
 - Int, Float, Double, Charactor, String, Bool
 - 데이터 크기, 형태 변경 불가
 
 
 
 
 
 (10강)
 
 정식 문법
 - var b: Int 7   타입 주속(Type Annotation)
 - 변수 선언하면서 변수 안에 담을 데이터 형태를 선언할 수 있다
 
 추론 방법
 - var b = 7
 - 컴파일러가 변수의 타입을 추론해서 알려준다
 
 타입 확인법
 - type(of: 대상)
 
 타입 주석
 - 데이터 상자(변수)를 선언하면서 데이터 상자에는
   특정 타입이 담길 수 있다고 명시적으로 선언하는 방법
 
 타입 추론
 - 데이터 타입을 명시하지 않아도 데이터를 담을 수 있는 방법
 - 컴파일러가 타입을 유추해서 알맞은 타입으로 저장
 
 타입 안전성
 - 어떤 변수가 정수 형태로 선언되면 그 변수는 정수만 담을 수 있다
 
 정리
 - 타입이 필요한 이유: 데이터를 메모리(변수) 라는 공간에
   어떤 크기 / 어떤 형태로 저장할 것인지 파악해야 하기 때문
 - 변수랑 상수를 통틀어서 변수라고 부르기도 함(저장되는 데이터 관점)
 - 선언과 동시에 초기화 하기 싫으면 타입 주석을 달아줘야 한다
 
 
 
 
 
 (11강)
 
 타입 변환(Conversion)
 - Int("안녕") -> nil 타입=변환실패=값이 없음을 나타내는 키워드
 
 Type Alias
 - 프로그래밍에서 수학의 치환과 동일한 문법(타입만 치환 시켜서 사용 가능)
 - typealias Name = String
 - Name이라는 이름이 String의 별명이다
 - var a: Name = "hello"
 
 
 
 
 
 (12강)  프로그래밍 용어 정리
 
 키워드
 - 약속어
 
 리터럴
 - 코드에서 고정된 값으로 표현되는 문자 데이터 그자체
 
식별자
 - 변수, 상수, 함수, 사용자 정의 타입의 이름
 
 토큰
 - 코드의 가장 작은 최소 단위
 
 표현식
 - 값, 변수, 연산자의 조합으로 하나의 결과값으료 평가되는 코드 단위
 - 컴퓨터에게 어떤 명령을 내리는 것은 아님, 암시적인 값을 표현하고 사라지는 코드다
 ex) number + 7
 
 문장
 - 특정 작업을 실행하는 코드 단위
 
 
 
 
 */

// 3이라는 숫자를 a 라는 공간에 저장한다
var a = 3

// 선언과 동시에 초기화
var b = 3

// 선언만 하고 다음 줄에 값을 할당
var c: Int
c = 3

// TypeAlias
typealias Name = String
var d: Name = "hello"








