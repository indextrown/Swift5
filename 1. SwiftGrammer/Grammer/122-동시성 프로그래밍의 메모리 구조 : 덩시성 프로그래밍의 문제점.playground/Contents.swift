/*
 
 (181강)
 1) 경쟁상황/경쟁조건
 - 서로 다른 스레드에서 동시에 하나의 메모리에 접근했을때를 의미
 - 하나의 메모리에 동시에 접근하는 상황
 ==> Thread safe 하지 않다고 표현함(각자의 스레드에서 안전하지 않다)
 
 이런 일이 발생하지 않도록 하는 방법
 - 메모리에 한 스레드에서 하나만 접근할 수 있다록 rock(열쇠를 걸어잠그는) 코드가 존재
 
 
 
 2) 교착상태
 3번 스레드에서 임걱정 이름을 잠궈버려서 2번 스레드에서 접근할 수 었는 상황 발생가능
 -> 함수나 메서드가 일을 종료시키지 못해서 앱이 멈출 수 있다
 
 예시)
 프린트 드라이버에 접속을 해서 출력하는 2개의 프린트앱 존재한다고 가정
 - 앱 각각 동시에 프린트를 사용할 경우 서로 선점 하려고 해서 일이 진행되지 않는 상태
 
 
 (182강)
 동시성 프로그래밍 문제점의 해결
 - 비동기적인 처리를 하게 되면 여러 스레드에 작업이 배치된다
 - 이때 각자 스택을 만들게 되는데
 - 여러 스레드(스택)에서 하나의 힙 메모리에 접근을 하게 되는데 경쟁 상황이 생길수밖에 없다
 
 해결법
 - 다시 직렬큐로 보낸다
 - 반드시 한번에 하나씩밖에 일을 못한다 그래서 하나의 thread에서만 접근을 할 수 있기 때문에 thread safe하지 않은 상황을 해결 가능하다
 
 */
