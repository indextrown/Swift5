import UIKit

// 서브스크립트의 확장

// Int형 타입에 서브스크립트 추가해보기(기본자리수의 n자리의 십진수 반환하도록 만들기)
// 예시
// 123456789[0] // 9
// 123456789[1] // 8
// 123456789[2] // 7

extension Int {
    subscript(num: Int) -> Int {
        var decimalBase = 1
        for _ in 0..<num {
            decimalBase *= 10
        }
        // num = 0이면
        // 123456789를 1로 나누면 다시 123456789이다
        // 그 숫자를 10으로 나누었을때의 나머지
        return (self / decimalBase) % 10
    }
}
                // 로직: (123456789 / 10) % 10 ==> 12345678 % 10 = 8(나머지)
123456789[0]    // (123456789 / 1)  % 10 = 9(나머지)
123456789[1]    // (123456789 / 10) % 10 = 8(나머지)
123456789[2]    // (123456789 / 100) % 10 = 7(나머지)

// Int값에 요청된 자릿수가 넘어간 경우 0반환
746381295[9]    // 0

// 앞에 0이 존재 하는 것과 같음
00000746381295[9]    // 0



